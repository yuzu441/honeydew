import * as fs from "node:fs/promises"
import type { Config } from "."
import { appName, appVersion } from "./constants"

export class SshConfigFile {
  private configList: Config[] = []

  constructor(public readonly path: string) {}

  add(config: Config) {
    this.configList.push(config)
  }

  async generate(path?: string) {
    for (const file of this.configList) {
      await file.validation()
    }

    const formattedDate = getCurrentDateTimeString(new Date())

    const banner = `#
# This config is generated by ${appName} v${appVersion}
# ${formattedDate}
#`.trim()

    const result = this.configList
      .map((config) => config.toConfigFileText())
      .join("\n\n")

    const generatedText = `${banner}\n\n${result}`
    if (path !== undefined) {
      await fs.writeFile(path, generatedText, "utf-8")
    } else {
      console.log(generatedText)
    }
  }
}

function getCurrentDateTimeString(d: Date): string {
  const year = d.getFullYear()
  const month = (d.getMonth() + 1).toString().padStart(2, "0")
  const day = d.getDate().toString().padStart(2, "0")

  const hours = d.getHours().toString().padStart(2, "0")
  const minutes = d.getMinutes().toString().padStart(2, "0")
  const seconds = d.getSeconds().toString().padStart(2, "0")

  return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`
}
